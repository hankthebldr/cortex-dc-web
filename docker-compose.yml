# Cortex DC Web - Local Development with Docker Compose
# For development and testing containerized services

version: '3.9'

services:
  # Next.js Web Application
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
      target: runner
      args:
        NODE_ENV: development
    container_name: cortex-web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY}
      - NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}
      - NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID}
      - NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}
      - NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}
      - NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID}
    volumes:
      - ./apps/web:/app/apps/web:ro
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    networks:
      - cortex-network
    depends_on:
      - functions
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Functions
  functions:
    build:
      context: .
      dockerfile: Dockerfile.functions
      target: runner
    container_name: cortex-functions
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - GCP_PROJECT=${GCP_PROJECT}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/secrets/service-account.json
      - FIREBASE_CONFIG=${FIREBASE_CONFIG}
    volumes:
      - ./functions:/app:ro
      - /app/node_modules
      - ./secrets:/app/secrets:ro
    networks:
      - cortex-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (optional for local testing)
  nginx:
    image: nginx:alpine
    container_name: cortex-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - cortex-network
    depends_on:
      - web
      - functions
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  cortex-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  node_modules:
  next_cache:
