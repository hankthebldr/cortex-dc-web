apiVersion: apps/v1
kind: Deployment
metadata:
  name: functions-microservice
  namespace: cortex-dc
  labels:
    app: functions
    component: microservice
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: functions
      component: microservice
  template:
    metadata:
      labels:
        app: functions
        component: microservice
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: functions-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault

      containers:
      - name: functions
        image: gcr.io/cortex-dc-project/functions-microservice:latest
        imagePullPolicy: Always

        ports:
        - name: http
          containerPort: 8080
          protocol: TCP

        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: HOST
          value: "0.0.0.0"
        - name: APP_VERSION
          valueFrom:
            configMapKeyRef:
              name: functions-config
              key: app-version
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: functions-config
              key: log-level
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: functions-config
              key: cors-origin

        # Firebase/GCP credentials
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /var/secrets/google/key.json
        - name: GOOGLE_CLOUD_PROJECT
          valueFrom:
            secretKeyRef:
              name: functions-secrets
              key: gcp-project-id

        # Genkit AI API Key
        - name: GOOGLE_GENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: functions-secrets
              key: genai-api-key

        # Firebase configuration
        - name: FIREBASE_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: functions-secrets
              key: firebase-project-id
        - name: FIREBASE_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: functions-secrets
              key: firebase-database-url

        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"

        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /readyz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12

        volumeMounts:
        - name: google-credentials
          mountPath: /var/secrets/google
          readOnly: true

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL

      volumes:
      - name: google-credentials
        secret:
          secretName: functions-gcp-credentials
          items:
          - key: key.json
            path: key.json

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - functions
              topologyKey: kubernetes.io/hostname

      terminationGracePeriodSeconds: 30
