apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-ingress
  namespace: cortex-dc
  labels:
    app: cortex-web
    component: frontend
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # TLS/SSL Configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "20"

    # CORS (if needed for API routes)
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://cortex.example.com"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";

    # Timeout configuration for SSR
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"

    # Body size limit
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"

    # Session affinity for sticky sessions (important for SSR)
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "cortex-route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/session-cookie-path: "/"

spec:
  tls:
  - hosts:
    - cortex.example.com  # UPDATE THIS with your domain
    secretName: cortex-web-tls

  rules:
  - host: cortex.example.com  # UPDATE THIS with your domain
    http:
      paths:
      # Main application routes (Next.js handles all paths)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-service
            port:
              number: 80

      # API routes (handled by Next.js API routes)
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: web-service
            port:
              number: 80

      # Static assets
      - path: /_next
        pathType: Prefix
        backend:
          service:
            name: web-service
            port:
              number: 80

      # Health check endpoints
      - path: /healthz
        pathType: Exact
        backend:
          service:
            name: web-service
            port:
              number: 80

      - path: /readyz
        pathType: Exact
        backend:
          service:
            name: web-service
            port:
              number: 80

---
# Backend configuration for GCP Load Balancer (if using GKE)
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: web-backend-config
  namespace: cortex-dc
spec:
  timeoutSec: 30
  connectionDraining:
    drainingTimeoutSec: 60
  healthCheck:
    checkIntervalSec: 10
    port: 3000
    type: HTTP
    requestPath: /api/health
  sessionAffinity:
    affinityType: "CLIENT_IP"
    affinityCookieTtlSec: 3600
  cdn:
    enabled: true
    cachePolicy:
      includeHost: true
      includeProtocol: true
      includeQueryString: false
    negativeCaching: true
    negativeCachingPolicy:
    - code: 404
      ttl: 120
    - code: 410
      ttl: 120
