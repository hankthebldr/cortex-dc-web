{{- if .Values.web.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cortex-dc.fullname" . }}-web
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "cortex-dc.labels" . | nindent 4 }}
    {{- include "cortex-dc.web.selectorLabels" . | nindent 4 }}
  annotations:
    {{- include "cortex-dc.annotations" . | nindent 4 }}
spec:
  {{- if not .Values.web.autoscaling.enabled }}
  replicas: {{ .Values.web.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "cortex-dc.web.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/web-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/web-secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/metrics"
      labels:
        {{- include "cortex-dc.web.selectorLabels" . | nindent 8 }}
        version: {{ .Chart.AppVersion | quote }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cortex-dc.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.web.podSecurityContext | nindent 8 }}
      containers:
      - name: web
        securityContext:
          {{- toYaml .Values.web.securityContext | nindent 12 }}
        image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.web.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.web.service.targetPort }}
          protocol: TCP
        livenessProbe:
          {{- toYaml .Values.web.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.web.readinessProbe | nindent 12 }}
        resources:
          {{- toYaml .Values.web.resources | nindent 12 }}
        env:
        {{- range .Values.web.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        {{- if .Values.web.envFrom }}
        envFrom:
        {{- toYaml .Values.web.envFrom | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.next/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
{{- end }}
