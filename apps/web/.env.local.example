# Cortex DC Web - Environment Configuration
# Copy this file to .env.local and fill in your values

#============================================
# Deployment Mode
#============================================
# Choose: "firebase" or "self-hosted"
DEPLOYMENT_MODE=self-hosted
NEXT_PUBLIC_DEPLOYMENT_MODE=self-hosted

#============================================
# Application Configuration
#============================================
NODE_ENV=development
NEXT_PUBLIC_APP_NAME=Cortex DC
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_ENVIRONMENT=development

#============================================
# Backend API Configuration
#============================================
# For self-hosted mode, this points to your API server
# For Firebase mode, this may point to Cloud Functions
NEXT_PUBLIC_API_URL=http://localhost:8080
NEXT_PUBLIC_API_TIMEOUT=30000
NEXT_PUBLIC_USE_BACKEND_API=true

#============================================
# Authentication Configuration
#============================================

# --- Self-Hosted Mode (Keycloak/OIDC) ---
# Uncomment if using self-hosted mode
NEXT_PUBLIC_KEYCLOAK_URL=http://localhost:8180
NEXT_PUBLIC_KEYCLOAK_REALM=cortex
NEXT_PUBLIC_KEYCLOAK_CLIENT_ID=cortex-web

# Keycloak admin credentials (backend only)
KEYCLOAK_CLIENT_SECRET=your-keycloak-client-secret-here
KEYCLOAK_ADMIN=admin
KEYCLOAK_ADMIN_PASSWORD=admin_password_change_me

# --- Firebase Mode ---
# Uncomment if using Firebase mode
# Get these from Firebase Console > Project Settings
# NEXT_PUBLIC_FIREBASE_API_KEY=your-api-key-here
# NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=cortex-dc-portal.firebaseapp.com
# NEXT_PUBLIC_FIREBASE_PROJECT_ID=cortex-dc-portal
# NEXT_PUBLIC_FIREBASE_APP_ID=your-app-id-here
# NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=your-measurement-id-here

# --- Firebase Emulator Configuration (Firebase mode only) ---
# NEXT_PUBLIC_USE_EMULATOR=false
# NEXT_PUBLIC_AUTH_EMULATOR_HOST=localhost:9099
# NEXT_PUBLIC_FIRESTORE_EMULATOR_HOST=localhost
# NEXT_PUBLIC_FIRESTORE_EMULATOR_PORT=8080
# NEXT_PUBLIC_STORAGE_EMULATOR_HOST=localhost
# NEXT_PUBLIC_STORAGE_EMULATOR_PORT=9199

# --- Mock Auth (Testing only) ---
# Enable mock auth mode (for testing without real auth)
NEXT_PUBLIC_ENABLE_MOCK_AUTH=false

#============================================
# Database Configuration
#============================================

# --- Self-Hosted Mode (PostgreSQL) ---
POSTGRES_USER=cortex
POSTGRES_PASSWORD=cortex_secure_password_change_me
POSTGRES_DB=cortex
DATABASE_URL=postgresql://cortex:cortex_secure_password_change_me@localhost:5432/cortex

# --- Firebase Mode (Firestore) ---
# No additional configuration needed - uses Firebase credentials above

#============================================
# Storage Configuration
#============================================

# --- Self-Hosted Mode (MinIO/S3) ---
STORAGE_MODE=minio
NEXT_PUBLIC_STORAGE_MODE=minio
NEXT_PUBLIC_MINIO_ENDPOINT=http://localhost:9000
NEXT_PUBLIC_MINIO_BUCKET=cortex-storage

# Backend MinIO configuration
MINIO_ENDPOINT=http://localhost:9000
MINIO_PORT=9000
MINIO_BUCKET=cortex-storage
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin_password_change_me
MINIO_USE_SSL=false
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin_password_change_me

# --- Firebase Mode (Cloud Storage) ---
# NEXT_PUBLIC_STORAGE_MODE=firebase
# NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=cortex-dc-portal.appspot.com

#============================================
# Caching & Message Queue (Self-Hosted)
#============================================

# Redis
REDIS_URL=redis://:redis_password_change_me@localhost:6379
REDIS_PASSWORD=redis_password_change_me

# NATS
NATS_URL=nats://localhost:4222

#============================================
# Security
#============================================
# JWT token secret (minimum 32 characters)
JWT_SECRET=your-jwt-secret-minimum-32-characters-here-change-in-production

# Session secret for cookie encryption
SESSION_SECRET=your-session-secret-minimum-32-characters-here-change-in-production

# CORS allowed origins (comma-separated)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080

#============================================
# AI Configuration
#============================================
# Gemini API (for AI features)
GEMINI_API_KEY=your-gemini-api-key-here
NEXT_PUBLIC_GEMINI_API_KEY=your-gemini-api-key-here
AI_MODEL=gemini-2.5-flash

# OpenAI (optional alternative)
# OPENAI_API_KEY=your-openai-api-key-here

#============================================
# Feature Flags
#============================================
NEXT_PUBLIC_ENABLE_ANALYTICS=false
NEXT_PUBLIC_ENABLE_AI_FEATURES=true
NEXT_PUBLIC_ENABLE_POV_MANAGEMENT=true
NEXT_PUBLIC_ENABLE_TRR_WORKFLOWS=true
NEXT_PUBLIC_ENABLE_CONTENT_LIBRARY=true
NEXT_PUBLIC_ENABLE_TERRAFORM_GENERATION=true

#============================================
# Analytics & Monitoring (Optional)
#============================================
# Sentry DSN for error tracking
NEXT_PUBLIC_SENTRY_DSN=
SENTRY_DSN=

# Google Analytics ID
NEXT_PUBLIC_GA_ID=

# Log level
LOG_LEVEL=info

#============================================
# Email Configuration (Optional)
#============================================
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=noreply@cortex.example.com

#============================================
# Okta SSO Configuration (Optional)
#============================================
# Option 1: Okta SAML (Enterprise SSO)
# Configure SAML provider in your auth system first
# NEXT_PUBLIC_OKTA_SAML_PROVIDER_ID=saml.okta-cortex-dc

# Option 2: Okta OAuth 2.0
# NEXT_PUBLIC_OKTA_CLIENT_ID=your-okta-client-id
# NEXT_PUBLIC_OKTA_ISSUER=https://your-org.okta.com
