apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: cortex-dc
  labels:
    app: minio
    component: storage
spec:
  ports:
  - port: 9000
    targetPort: 9000
    name: api
  - port: 9001
    targetPort: 9001
    name: console
  clusterIP: None
  selector:
    app: minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio-api
  namespace: cortex-dc
  labels:
    app: minio
    component: storage
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    name: api
  selector:
    app: minio
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: cortex-dc
  labels:
    app: minio
    component: storage
spec:
  serviceName: minio
  replicas: 1  # For production, consider using 4+ for distributed mode
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
        component: storage
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true

      containers:
      - name: minio
        image: minio/minio:RELEASE.2024-01-01T16-36-33Z
        imagePullPolicy: IfNotPresent

        command:
        - /bin/sh
        - -c
        - minio server /data --console-address :9001

        ports:
        - containerPort: 9000
          name: api
          protocol: TCP
        - containerPort: 9001
          name: console
          protocol: TCP

        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: cortex-secrets
              key: minio-root-user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cortex-secrets
              key: minio-root-password
        - name: MINIO_BROWSER
          value: "on"
        - name: MINIO_PROMETHEUS_AUTH_TYPE
          value: "public"

        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"

        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        volumeMounts:
        - name: minio-data
          mountPath: /data

        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

  volumeClaimTemplates:
  - metadata:
      name: minio-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
      storageClassName: standard-rwo
---
# MinIO bucket initialization job
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-init-buckets
  namespace: cortex-dc
  labels:
    app: minio
    component: init
spec:
  template:
    metadata:
      labels:
        app: minio
        component: init
    spec:
      restartPolicy: OnFailure
      containers:
      - name: mc
        image: minio/mc:latest
        command:
        - /bin/sh
        - -c
        - |
          until (mc config host add minio http://minio-api:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD) do
            echo 'Waiting for MinIO...'
            sleep 2
          done
          mc mb minio/cortex-documents || true
          mc mb minio/cortex-uploads || true
          mc mb minio/cortex-exports || true
          mc policy set download minio/cortex-documents
          mc policy set download minio/cortex-uploads
          mc policy set download minio/cortex-exports
          echo 'MinIO buckets initialized successfully'
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: cortex-secrets
              key: minio-root-user
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cortex-secrets
              key: minio-root-password
