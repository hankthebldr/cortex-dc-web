# Cortex DC Web - Environment Configuration Template
# Copy this file to .env.local for development
# DO NOT commit .env files with actual values to version control

#============================================
# Server Configuration
#============================================
NODE_ENV=development
PORT=8080

#============================================
# GCP Configuration
#============================================
GCP_PROJECT_ID=cortex-dc-portal
GCP_REGION=us-central1
# Base64 encoded service account JSON (for local development only)
# In production, use Workload Identity
GCP_SERVICE_ACCOUNT_KEY=

#============================================
# Database Configuration
#============================================
# Options: firestore, postgres
DATABASE_TYPE=firestore

# Firestore Configuration
FIRESTORE_PROJECT_ID=cortex-dc-portal
FIRESTORE_DATABASE_ID=(default)

# PostgreSQL Configuration (if using postgres)
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=cortex_dc
DATABASE_USER=cortex_app
DATABASE_PASSWORD=
DATABASE_SSL=true
DATABASE_CONNECTION_POOL_MAX=10
DATABASE_CONNECTION_POOL_MIN=2

#============================================
# Storage Configuration
#============================================
# Options: gcs, local
STORAGE_PROVIDER=gcs
STORAGE_BUCKET=cortex-dc-storage
STORAGE_CDN_URL=https://storage.googleapis.com/cortex-dc-storage
STORAGE_MAX_FILE_SIZE=52428800
STORAGE_ALLOWED_TYPES=image/*,application/pdf,text/*

#============================================
# Authentication Configuration
#============================================
# Options: firebase, gcp-identity
AUTH_PROVIDER=firebase
AUTH_DOMAIN=cortex-dc.henryreed.ai
AUTH_PROJECT_ID=cortex-dc-portal

# JWT Configuration
JWT_SECRET=your-jwt-secret-min-32-chars
JWT_EXPIRATION=7d
JWT_REFRESH_EXPIRATION=30d

# Session Configuration
SESSION_SECRET=your-session-secret-min-32-chars
SESSION_MAX_AGE=86400000

#============================================
# API Configuration
#============================================
API_BASE_URL=http://localhost:8080
API_TIMEOUT=30000
API_RATE_LIMIT=100
API_RATE_LIMIT_WINDOW=900000

# CORS Configuration
CORS_ORIGINS=http://localhost:3000,http://localhost:5000
CORS_CREDENTIALS=true

#============================================
# Frontend Configuration (Next.js)
#============================================
NEXT_PUBLIC_API_URL=http://localhost:8080
NEXT_PUBLIC_AUTH_DOMAIN=cortex-dc.henryreed.ai
NEXT_PUBLIC_STORAGE_CDN_URL=https://storage.googleapis.com/cortex-dc-storage
NEXT_PUBLIC_ENABLE_ANALYTICS=false
NEXT_PUBLIC_ENVIRONMENT=development

#============================================
# AI Services Configuration
#============================================
# Google Gemini
GEMINI_API_KEY=
GEMINI_MODEL=gemini-pro
GEMINI_TEMPERATURE=0.7
GEMINI_MAX_TOKENS=2048

# OpenAI (optional)
OPENAI_API_KEY=
OPENAI_MODEL=gpt-4
OPENAI_TEMPERATURE=0.7

#============================================
# BigQuery Configuration
#============================================
BIGQUERY_PROJECT_ID=cortex-dc-portal
BIGQUERY_DATASET=cortex_analytics
BIGQUERY_LOCATION=US
BIGQUERY_ENABLE_CACHE=true

#============================================
# XSIAM Integration (Optional)
#============================================
XSIAM_API_URL=
XSIAM_API_KEY=
XSIAM_TENANT_ID=

#============================================
# Monitoring & Logging
#============================================
LOG_LEVEL=info
LOG_FORMAT=json
ENABLE_REQUEST_LOGGING=true
ENABLE_PERFORMANCE_MONITORING=true

# Sentry (optional)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

#============================================
# Feature Flags
#============================================
ENABLE_ANALYTICS=true
ENABLE_AI_FEATURES=true
ENABLE_BIGQUERY_EXPORT=false
ENABLE_XSIAM_INTEGRATION=false
ENABLE_CONTENT_LIBRARY=true
ENABLE_POV_MANAGEMENT=true
ENABLE_TRR_WORKFLOWS=true

#============================================
# Cache Configuration (Redis - optional)
#============================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_TLS=false
CACHE_TTL=3600

#============================================
# Email Configuration (optional)
#============================================
EMAIL_PROVIDER=sendgrid
EMAIL_FROM=noreply@cortex-dc.henryreed.ai
EMAIL_FROM_NAME=Cortex DC Platform
SENDGRID_API_KEY=

#============================================
# Security Configuration
#============================================
# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# CSRF Protection
CSRF_ENABLED=true
CSRF_SECRET=

# Content Security Policy
CSP_ENABLED=true

#============================================
# Development Tools
#============================================
DEBUG=false
ENABLE_SWAGGER_UI=true
ENABLE_GRAPHQL_PLAYGROUND=false

#============================================
# Testing Configuration
#============================================
TEST_DATABASE_URL=
TEST_STORAGE_BUCKET=cortex-dc-test
MOCK_EXTERNAL_SERVICES=true

# E2E Testing (Playwright)
E2E_BASE_URL=http://localhost:3000
E2E_TIMEOUT=30000
E2E_GLOBAL_SETUP_DISABLED=false
E2E_HEADLESS=true

# Performance Testing (Lighthouse)
LHCI_GITHUB_APP_TOKEN=
LHCI_SERVER_URL=
LHCI_TOKEN=

# Security Testing (OWASP ZAP)
ZAP_API_KEY=
ZAP_PROXY_HOST=localhost
ZAP_PROXY_PORT=8080

# WebPageTest API
WEBPAGETEST_API_KEY=
WEBPAGETEST_URL=https://cortex-dc.example.com
WEBPAGETEST_LOCATION=Dulles:Chrome

# Snyk Security Scanning
SNYK_TOKEN=

# Test Users (for E2E and security testing)
TEST_ADMIN_EMAIL=admin@cortex.com
TEST_ADMIN_PASSWORD=admin123
TEST_USER_EMAIL=user@cortex.com
TEST_USER_PASSWORD=user123

#============================================
# Deployment Mode Configuration
#============================================
# Options: firebase, self-hosted
DEPLOYMENT_MODE=firebase
NEXT_PUBLIC_DEPLOYMENT_MODE=firebase
NEXT_PUBLIC_AUTH_MODE=firebase
